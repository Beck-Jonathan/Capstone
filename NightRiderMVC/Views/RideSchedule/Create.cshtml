@model DataObjects.Ride_VM

@{
    ViewBag.Title = "Create";
}

<h2>Schedule a ride with @(Model?.Operation ?? ViewBag.Operation)</h2>

<hr />

@using (Html.BeginForm()) 
{
    @Html.AntiForgeryToken()
    
    <div class="form-horizontal">
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        <input type="hidden" name="Operation" value="@(Model?.Operation ?? ViewBag.Operation)" />

        <div class="container d-flex flex-row justify-content-center">
            <div class="row w-50">

                <div class="col-6">
                    <div class="form-group w-100 mt-1">
                        @Html.LabelFor(model => model.ScheduledDate, htmlAttributes: new { @class = "control-label" })
                        @Html.EditorFor(model => model.ScheduledDate, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.ScheduledDate, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="col-6 d-flex flex-row justify-content-end mt-1">
                    <div class="form-group w-100">
                        @Html.LabelFor(model => model.ScheduledTime, htmlAttributes: new { @class = "control-label" })
                        @Html.EditorFor(model => model.ScheduledTime, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.ScheduledTime, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="col-6">
                    <div class="form-group w-100 mt-3">
                        @Html.LabelFor(model => model.PickupLocation, htmlAttributes: new { @class = "control-label" })
                        @Html.EditorFor(model => model.PickupLocation, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.PickupLocation, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="col-6 d-flex flex-row justify-content-end mt-3">
                    <div class="form-group w-100">
                        @Html.LabelFor(model => model.DropoffLocation, htmlAttributes: new { @class = "control-label" })
                        @Html.EditorFor(model => model.DropoffLocation, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.DropoffLocation, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="text-danger">
                    @ViewBag.Error
                </div>

                <div class="form-group d-flex flex-row justify-content-between mt-4">
                    <input type="submit" value="Schedule" class="btn btn-success ms-2" />

                    <button type="button" class="btn btn-danger me-2">
                        @Html.ActionLink("Cancel", "Index", null, new { @class="text-light " })
                    </button>
                </div>
            </div>
        </div>
    </div>

}

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}
