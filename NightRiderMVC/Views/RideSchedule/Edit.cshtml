@model DataObjects.Ride_VM

@{
    ViewBag.Title = "Edit Ride";
}

<h2>Scheduled ride with @Model.Operation</h2>

<hr />

@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()
    
    <div class="form-horizontal">
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        @Html.HiddenFor(model => model.RideID)
        @Html.HiddenFor(model => model.Operation)
        @Html.HiddenFor(model => model.VIN)
        @Html.HiddenFor(model => model.DriverID)
        @Html.HiddenFor(model => model.ClientID)

        <div class="container d-flex flex-row justify-content-center">
            <div class="row w-50">

                <div class="col-6">
                    <div class="form-group w-100 mt-1">
                        @Html.LabelFor(model => model.ScheduledDate, htmlAttributes: new { @class = "control-label" })
                        @Html.EditorFor(model => model.ScheduledDate, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.ScheduledDate, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="col-6 d-flex flex-row justify-content-end mt-1">
                    <div class="form-group w-100">
                        @Html.LabelFor(model => model.ScheduledTime, htmlAttributes: new { @class = "control-label" })
                        @Html.EditorFor(model => model.ScheduledTime, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.ScheduledTime, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="col-6">
                    <div class="form-group w-100 mt-3">
                        @Html.LabelFor(model => model.PickupLocation, htmlAttributes: new { @class = "control-label" })
                        @Html.EditorFor(model => model.PickupLocation, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.PickupLocation, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="col-6 d-flex flex-row justify-content-end mt-3">
                    <div class="form-group w-100">
                        @Html.LabelFor(model => model.DropoffLocation, htmlAttributes: new { @class = "control-label" })
                        @Html.EditorFor(model => model.DropoffLocation, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.DropoffLocation, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="text-danger">
                    @ViewBag.Error
                </div>

                <div class="form-group d-flex flex-row justify-content-between mt-4">
                    <input type="submit" value="Save" class="btn btn-success ms-2" />

                    <button type="button" class="btn btn-danger me-2" data-bs-toggle="modal" data-bs-target="#cancelModal">Cancel Ride</button>
                </div>

            </div>
        </div>
    </div>
}

<div class="modal" id="cancelModal" tabindex="-1" role="dialog" aria-labelledby="cancelModalLabel" aria-hidden="true">
    <div class="modal-dialog" role="document">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title" id="cancelModalLabel">Cancel Ride?</h5>
                <button type="button" class="close" data-bs-dismiss="modal" aria-label="Close">
                    <span aria-hidden="true">&times;</span>
                </button>
            </div>
            <div class="modal-body">
                Are you sure you want to cancel this ride with @Model.Operation?
            </div>
            <div class="modal-footer d-flex flex-row justify-content-between">
                <button type="button" class="btn btn-primary" data-bs-dismiss="modal">No, do not cancel</button>
                <form action="/RideSchedule/Deactivate" method="post">
                    <input type="hidden" name="rideID" value="@Model.RideID" />
                    <input type="submit" class="btn btn-danger" value="Yes, cancel this ride" />
                </form>
            </div>
        </div>
    </div>
</div>

<div>
    @Html.ActionLink("Back to List", "Index")
</div>

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
    @Scripts.Render("~/bundles/bootstrap")
}
