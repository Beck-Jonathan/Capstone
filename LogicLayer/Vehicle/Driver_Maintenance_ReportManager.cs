using DataAccessInterfaces;
using DataAccessLayer;
using DataObjects;
using System;
using System.Collections.Generic;
using System.Linq;
using System.Text;
using System.Threading.Tasks;
using DataAccessLayer;
using DataObjects;

namespace LogicLayer
{
    public class Driver_Maintenance_ReportManager : IDriverMaintenanceReportManager
    {
        private IDriverMaintenanceReportAccessor _driver_maintenance_reportAccessor = null;
        //default constuctor uses the database
        //Jonathan Beck 2024-04-16
        public Driver_Maintenance_ReportManager()
        {
            _driver_maintenance_reportAccessor = new DriverMaintenanceReportAccessor();
        }
        //the optional constuctor can accept any data provider
        //Jonathan Beck 2024-04-16
        public Driver_Maintenance_ReportManager(IDriverMaintenanceReportAccessor driver_maintenance_reportAccessor)
        {
            _driver_maintenance_reportAccessor = driver_maintenance_reportAccessor;
        }


        /// <summary>
        ///     Adds a driver maintanance report
        /// </summary>
        /// <param name="_Driver_Maintenance_Report">
        ///    The report we are trying to add to the database
        /// </param>
        /// 
        /// <returns>
        ///    <see cref="bool">bool</see>: True or false if the report was added
        /// </returns>
        /// <remarks>
        ///    Parameters:
        /// <br />
        ///    <see cref="DriverMaintenanceReport">DriverMaintenanceReport</see> _Driver_Maintenance_Report: The report generated by the driver
        /// <br />
        ///    CONTRIBUTOR: Jonathan Beck
        /// <br />
        ///    CREATED: 2024-04-17
        /// </remarks>
        public bool addDriverMaintenanceReport(DriverMaintenanceReport _Driver_Maintenance_Report)
        {
            bool result = false; ;
            try
            {
                result = (1 == _driver_maintenance_reportAccessor.insertDriverMaintenanceReport(_Driver_Maintenance_Report));
            }
            catch (Exception ex)
            {
                throw new ApplicationException("Driver Maintenance Report not added", ex); ;
            }
            return result;
        }

        /// <summary>
        ///     Retrieves all Driver Maintenance Report records from the database
        /// </summary>
        /// <returns>
        ///    List of <see cref="List{DriverMaintenanceReport}">DriverMaintenanceReport</see> objects
        /// </returns>
        /// <remarks>
        ///    Exceptions:
        /// <br />
        ///    <see cref="Exception">Exception</see>: Thrown when error encountered
        /// <br /><br />
        ///    CONTRIBUTOR: Jonathan Beck
        /// <br />
        ///    CREATED: 2024-04-22
        /// <br />
        /// <br />
        ///    UPDATER: [Updater's Name]
        /// <br />
        ///    UPDATED: yyyy-MM-dd
        /// <br />
        ///     Initial Creation
        /// </remarks>

        public List<DriverMaintenanceReportVM> getActiveDriverMaintenacenReports()
        {

            {
                List<DriverMaintenanceReportVM> result = new List<DriverMaintenanceReportVM>();
                try
                {
                    result = _driver_maintenance_reportAccessor.SelectActiveDriverMaintenaceReports();
                    if (result.Count == 0)
                    {
                        throw new ApplicationException("Unable to retreive Driver_Maintenance_Reports");
                    }
                }
                catch (Exception ex)
                {
                    throw new ApplicationException("Unable to retreive Driver_Maintenance_Reports", ex);
                }
                return result;
            }

        }
        /// <summary>
        ///     Retrieves a single  Driver Maintenance Report record from the database
        /// </summary>
        /// <returns>
        ///    a single <see cref="DriverMaintenanceReport">DriverMaintenanceReport</see> object
        /// </returns>
        /// <remarks>
        ///    Exceptions:
        /// <br />
        ///    <see cref="Exception">Exception</see>: Thrown when error encountered
        /// <br /><br />
        ///    CONTRIBUTOR: Jonathan Beck
        /// <br />
        ///    CREATED: 2024-04-22
        /// <br />
        /// <br />
        ///    UPDATER: [Updater's Name]
        /// <br />
        ///    UPDATED: yyyy-MM-dd
        /// <br />
        ///     Initial Creation
        /// </remarks>

        public DriverMaintenanceReportVM getAllDriverMaintenanceReportsById(int id)
        {


            DriverMaintenanceReportVM result = null;
            try
            {
                result = _driver_maintenance_reportAccessor.SelectAllDriverMaintenanceReportsById(id);
                if (result == null)
                {
                    throw new ApplicationException("Unable to retreive Driver_Maintenance_Report");
                }
            }
            catch (Exception ex)
            {
                throw new ApplicationException("Unable to retreive Driver_Maintenance_Report", ex);
            }
            return result;

        }


        /// <summary>
        ///     Retrieves all Driver Maintenance Report records from the database for a particular driver
        /// </summary>
        /// <returns>
        ///    List of <see cref="List{DriverMaintenanceReport}">DriverMaintenanceReport</see> objects related to a particular driver
        /// </returns>
        /// <remarks>
        ///  ///    Parameters:
        /// <br />
        ///    <see cref="int">DriverID</see> DriverID: The Driver whose reports we want to view
        /// <br />
        ///    Exceptions:
        /// <br />
        ///    <see cref="Exception">Exception</see>: Thrown when error encountered
        /// <br /><br />
        ///    CONTRIBUTOR: Jonathan Beck
        /// <br />
        ///    CREATED: 2024-04-22
        /// <br />
        /// <br />
        ///    UPDATER: [Updater's Name]
        /// <br />
        ///    UPDATED: yyyy-MM-dd
        /// <br />
        ///     Initial Creation
        /// </remarks>
        public List<DriverMaintenanceReportVM> GetAllDriverMaintenacneReportsByEmployeeId(int DriverID)
        {
            List<DriverMaintenanceReportVM> result = new List<DriverMaintenanceReportVM>();
            try
            {
                result = _driver_maintenance_reportAccessor.SelectAllDriverMaintenanceReportsByEmployeeID(DriverID);
                if (result.Count == 0)
                {
                    throw new ApplicationException("Unable to retreive Driver_Maintenance_Reports");
                }
            }
            catch (Exception ex)
            {
                throw new ApplicationException("Unable to retreive Driver_Maintenance_Reports", ex);
            }
            return result;
        }
    }
}
